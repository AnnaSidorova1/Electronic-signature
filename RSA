import math

def check_prime_number(x):
    if x == 2:
        return True
    for i in range(2, int(math.sqrt(x)) + 1):
        if x % i == 0:
            return False
    return True


print('Algoritm RSA')
# step 1 - input q & p
print('Enter two different prime number')
p = int(input('p = '))
q = int(input('q = '))

# check prime number
if not check_prime_number(p) or not check_prime_number(q) or p == q or p == 1 or q == 1:
    print('Wrong numbers p and q!')
    quit()

# step 2 - calculate n
n = int(p * q)
print("n =", n)

# step 3 - calculate e
phi_n = (p - 1) * (q - 1)
e = 3
while (e < phi_n):
    if math.gcd(e, phi_n) != 1:
        e += 1
    else:
        break
print("e =", e)

# step 4 - calculate d
d = pow(e, -1, phi_n)
print("d =", d)
print(f'Public key: {e, n}')
print(f'Private key: {d, n}')

# step 5 - message
print('Enter message (number) from 1 to ' + str(n-1))
message = int(input('Your message: '))
if message < 1 or message > n-1:
    print('Wrong message!')
    quit()

print(f'Original message:{message}')

# signature
s = pow(message, d, n)
m_trust = pow(s, e, n)
print(f'Signature: {s}')
print(f'Message: {m_trust}')
if message == m_trust:
    print('The signature is valid!')
